[user]
	name = Stephen Skeirik
	email = stephen.skeirik@runtimeverification.com
[alias]
	ci = commit --verbose
	co = checkout
	d = diff --color-moved=blocks
	dc = diff --cached --color-moved=blocks
	st = status -sb
	b = branch
	bb = branch --verbose --verbose
	ba = branch --all
	bba = branch --verbose --verbose --all
	f = fetch
	fa = fetch --all
	g = grep
	last = log -n 1
	pushf = push --force-with-lease
	hist = log --abbrev-commit --decorate --date=relative --graph --topo-order \
	       --format=format:'%C(bold green)%h%C(reset) - %<(60)%C(green)%s%C(reset) - %C(blue)%an%C(reset)%C(bold yellow)%d%C(reset)'
        l = log --first-parent
	pl = log --pretty='%C(auto)%h %<(10,trunc)%Cred%an%C(auto) %d %s'
	ls = ls-files
	wd = diff --color-words
	wdc = diff --cached --color-words
	md = diff --color-moved --color-moved-ws=ignore-all-space
	mdc = diff --cached --color-moved --color-moved-ws=ignore-all-space
	bs = branch --sort=-committerdate \
	     --format='%(align:25)%(color:green)%(committerdate:relative)%(color:reset)%(end) - %(align:30,left)%(color:yellow)%(refname:short)%(color:reset)%(end) - %(contents:subject)'
	related = "!function git_related() { commit1=`git log -n 1 --format=\"%h\" $1` ; commit2=`git log -n 1 --format=\"%h\" $2` ; if git rev-list $commit1 | grep -q $commit2 ; then echo \"$2 is ancestor of $1\" ; elif git rev-list $commit2 | grep -q $commit1 ; then echo \"$1 is ancestor of $2\" ; else echo \"$1 unrelated to $2\" ; fi } ; git_related $1 $2 2>/dev/null"
	rec  = "submodule foreach --recursive"
	recg = "submodule foreach --recursive git"
	stat = "!function stat() { git log -1 --pretty= --numstat "$@" | cut -f3 ; } ; stat $1"
	unchanged = "!function unchanged() { comm -23 <(git ls-files "$@" | sort) <(git diff --name-only "$@" | sort) ; } ; unchanged $@"
[pull]
	ff = only
[credential]
	helper = store
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[url "git@github.com:"]
	insteadOf = https://github.com/
